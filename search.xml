<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Java学习路线</title>
      <link href="/2020/05/25/Java%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF/"/>
      <url>/2020/05/25/Java%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Java学习路线"><a href="#Java学习路线" class="headerlink" title="Java学习路线"></a>Java学习路线</h1><p>[TOC]</p><h2 id="JAVA基础"><a href="#JAVA基础" class="headerlink" title="JAVA基础"></a>JAVA基础</h2><ul><li>《Java核心技术卷》</li><li>《Effective Java》</li><li>《Java编程思想》</li></ul><h2 id="MySQL"><a href="#MySQL" class="headerlink" title="MySQL"></a>MySQL</h2><ul><li>《高性能MySQL》</li><li>《MySQL技术内幕：InnoDB存储引擎》</li></ul><h2 id="前端基础（html-、css、js、前端框架）"><a href="#前端基础（html-、css、js、前端框架）" class="headerlink" title="前端基础（html 、css、js、前端框架）"></a>前端基础（html 、css、js、前端框架）</h2><h2 id="常见框架（SSM、Spring-Boot）"><a href="#常见框架（SSM、Spring-Boot）" class="headerlink" title="常见框架（SSM、Spring Boot）"></a>常见框架（SSM、Spring Boot）</h2><h2 id="项目实战"><a href="#项目实战" class="headerlink" title="项目实战"></a>项目实战</h2><h2 id="JAVA并发编程"><a href="#JAVA并发编程" class="headerlink" title="JAVA并发编程"></a>JAVA并发编程</h2><ul><li>《Java并发编程》</li><li>《Java并发编程艺术》</li><li>《Java并发编程之美》</li></ul><h2 id="JVM"><a href="#JVM" class="headerlink" title="JVM"></a>JVM</h2><ul><li>《深入理解Java虚拟机》</li></ul><h2 id="JDK源码"><a href="#JDK源码" class="headerlink" title="JDK源码"></a>JDK源码</h2><h2 id="开发工具"><a href="#开发工具" class="headerlink" title="开发工具"></a>开发工具</h2><h2 id="MySQL进阶（原理、调优）"><a href="#MySQL进阶（原理、调优）" class="headerlink" title="MySQL进阶（原理、调优）"></a>MySQL进阶（原理、调优）</h2><h2 id="Redis"><a href="#Redis" class="headerlink" title="Redis"></a>Redis</h2><ul><li>《Redis深度历险：核心原理与技术》</li><li>《Redis设计与实现》</li></ul><h2 id="微服务"><a href="#微服务" class="headerlink" title="微服务"></a>微服务</h2><h2 id="中间件"><a href="#中间件" class="headerlink" title="中间件"></a>中间件</h2><h2 id="框架源码"><a href="#框架源码" class="headerlink" title="框架源码"></a>框架源码</h2><h2 id="计算机基础"><a href="#计算机基础" class="headerlink" title="计算机基础"></a>计算机基础</h2>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 书籍 </tag>
            
            <tag> JAVA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java反射基础(reflect)-1</title>
      <link href="/2020/05/25/Java%E5%8F%8D%E5%B0%84%E5%9F%BA%E7%A1%80-reflect-1/"/>
      <url>/2020/05/25/Java%E5%8F%8D%E5%B0%84%E5%9F%BA%E7%A1%80-reflect-1/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="反射（reflect）"><a href="#反射（reflect）" class="headerlink" title="反射（reflect）"></a>反射（reflect）</h3><p>定义：JAVA反射机制是在运行状态中，对于任意一个类，都能够知道这个类的所有属性和方法；对于任意一个对象，都能够调用它的任意一个方法和属性；这种动态获取的信息以及动态调用对象的方法的功能称为java语言的反射机制</p><h4 id="class类"><a href="#class类" class="headerlink" title="class类"></a>class类</h4><ul><li><p>在程序运行期间，Java运行时系统始终为所有的对象维护一个被称为运行时的类型标识。</p></li><li><p>类型标识跟踪每一个对象所属于的类，虚拟机利用运行时类型信息选择相应的方法执行。</p></li><li><p>可以通过专门的Java类访问这些信息，保存这些信息的类称为class类</p></li><li><p>获得class对象的3种方法</p><ul><li>通过Object的.class方法</li><li>对象的getclass（）</li><li>forName( string name) 此方法需要异常处理，只有在name代表的是一个接口或者一个类名时才可以</li></ul></li><li><p>使用newInstance()创建一个类的实例，默认调用无参构造函数</p></li></ul><h4 id="Filed类"><a href="#Filed类" class="headerlink" title="Filed类"></a>Filed类</h4><ul><li><pre><code class="java"><span class="keyword">import</span> java.lang.reflect.Constructor;<span class="keyword">import</span> java.lang.reflect.Field;<span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Filed_reflect</span> </span>{    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span>  Exception </span>{        Class c=Class.forName(<span class="string">"for_test_reflect"</span>);        Field[] fields=c.getFields();        System.out.println(<span class="string">"----------获取公有的成员变量-----------"</span>);        <span class="keyword">for</span> (Field a:fields){            System.out.println(a);        }        fields=c.getDeclaredFields();        System.out.println(<span class="string">"----------获取所有的成员变量-----------"</span>);        <span class="keyword">for</span> (Field a:fields){            System.out.println(a);        }        Field s = c.getDeclaredField(<span class="string">"age"</span>);        System.out.println(s);        Constructor cons=c.getConstructor();        Object obj = cons.newInstance();        s.set(obj,<span class="number">100</span>);        for_test_reflect ftr=(for_test_reflect)obj;        ftr.show();    }}&lt;!--￼<span class="number">0</span>--&gt;</code></pre></li></ul><h4 id="Constructor类"><a href="#Constructor类" class="headerlink" title="Constructor类"></a>Constructor类</h4><ul><li><pre><code class="java"><span class="keyword">import</span> jdk.nashorn.internal.ir.CatchNode;<span class="keyword">import</span> java.lang.reflect.Constructor;<span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Constructor_reflect</span>  </span>{    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span>  Exception </span>{        Class c=Class.forName(<span class="string">"for_test_reflect"</span>);        <span class="comment">//获取所有的公有构造方法</span>        Constructor[] constructors=c.getConstructors();        System.out.println(<span class="string">"----------------获取所有的公有构造方法----------------------"</span>);        <span class="keyword">for</span> (Constructor a:constructors){            System.out.println(a);        }        constructors=c.getDeclaredConstructors();        System.out.println(<span class="string">"----------------获取所有构造方法----------------------"</span>);        <span class="keyword">for</span> (Constructor a:constructors){            System.out.println(a);        }        <span class="comment">//调用构造器</span>        Constructor c1=c.getConstructor(<span class="keyword">null</span>);        c1.newInstance();        <span class="comment">//调用私有构造方法</span>        Constructor c2=c.getDeclaredConstructor(<span class="keyword">int</span><span class="class">.<span class="keyword">class</span>)</span>;        c2.setAccessible(<span class="keyword">true</span>);<span class="comment">//对于私有的构造函数的访问需要强制访问</span>        c2.newInstance(<span class="number">30</span>);    }}</code></pre></li></ul><h2 id=""><a href="#" class="headerlink" title=""></a></h2>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JAVA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>真累啊</title>
      <link href="/2020/05/24/%E7%9C%9F%E7%B4%AF%E5%95%8A/"/>
      <url>/2020/05/24/%E7%9C%9F%E7%B4%AF%E5%95%8A/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>事情真多，真累。<br></br><br>现在简直是诸神黄昏，站在旁边我人都看呆了，还说什么加入啊！难受~</p>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 累 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2020/05/21/hello-world/"/>
      <url>/2020/05/21/hello-world/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hello </tag>
            
            <tag> world </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
